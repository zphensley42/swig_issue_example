/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.zhen.foo;

public class BarMap extends java.util.AbstractMap<Bar, Bar> {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected BarMap(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BarMap obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        FooModuleJNI.delete_BarMap(swigCPtr);
      }
      swigCPtr = 0;
    }
  }


  public int size() {
    return sizeImpl();
  }

  public boolean containsKey(java.lang.Object key) {
    if (!(key instanceof Bar)) {
      return false;
    }

    return containsImpl((Bar)key);
  }

  public Bar get(java.lang.Object key) {
    if (!(key instanceof Bar)) {
      return null;
    }

    Iterator itr = find((Bar) key);
    if (itr.isNot(end())) {
      return itr.getValue();
    }

    return null;
  }

  public Bar put(Bar key, Bar value) {
    Iterator itr = find((Bar) key);
    if (itr.isNot(end())) {
      Bar oldValue = itr.getValue();
      itr.setValue(value);
      return oldValue;
    } else {
      putUnchecked(key, value);
      return null;
    }
  }

  public Bar remove(java.lang.Object key) {
    if (!(key instanceof Bar)) {
      return null;
    }

    Iterator itr = find((Bar) key);
    if (itr.isNot(end())) {
      Bar oldValue = itr.getValue();
      removeUnchecked(itr);
      return oldValue;
    } else {
      return null;
    }
  }

  public java.util.Set<Entry<Bar, Bar>> entrySet() {
    java.util.Set<Entry<Bar, Bar>> setToReturn =
        new java.util.HashSet<Entry<Bar, Bar>>();

    Iterator itr = begin();
    final Iterator end = end();
    while (itr.isNot(end)) {
      setToReturn.add(new Entry<Bar, Bar>() {
        private Iterator iterator;

        private Entry<Bar, Bar> init(Iterator iterator) {
          this.iterator = iterator;
          return this;
        }

        public Bar getKey() {
          return iterator.getKey();
        }

        public Bar getValue() {
          return iterator.getValue();
        }

        public Bar setValue(Bar newValue) {
          Bar oldValue = iterator.getValue();
          iterator.setValue(newValue);
          return oldValue;
        }
      }.init(itr));
      itr = itr.getNextUnchecked();
    }

    return setToReturn;
  }

  public BarMap() {
    this(FooModuleJNI.new_BarMap__SWIG_0(), true);
  }

  public BarMap(BarMap other) {
    this(FooModuleJNI.new_BarMap__SWIG_1(BarMap.getCPtr(other), other), true);
  }

  static protected class Iterator {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected Iterator(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(Iterator obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          FooModuleJNI.delete_BarMap_Iterator(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    private BarMap.Iterator getNextUnchecked() {
      return new BarMap.Iterator(FooModuleJNI.BarMap_Iterator_getNextUnchecked(swigCPtr, this), true);
    }
  
    private boolean isNot(BarMap.Iterator other) {
      return FooModuleJNI.BarMap_Iterator_isNot(swigCPtr, this, BarMap.Iterator.getCPtr(other), other);
    }
  
    private Bar getKey() {
      return new Bar(FooModuleJNI.BarMap_Iterator_getKey(swigCPtr, this), true);
    }
  
    private Bar getValue() {
      return new Bar(FooModuleJNI.BarMap_Iterator_getValue(swigCPtr, this), true);
    }
  
    private void setValue(Bar newValue) {
      FooModuleJNI.BarMap_Iterator_setValue(swigCPtr, this, Bar.getCPtr(newValue), newValue);
    }
  
  }

  public boolean isEmpty() {
    return FooModuleJNI.BarMap_isEmpty(swigCPtr, this);
  }

  public void clear() {
    FooModuleJNI.BarMap_clear(swigCPtr, this);
  }

  private BarMap.Iterator find(Bar key) {
    return new BarMap.Iterator(FooModuleJNI.BarMap_find(swigCPtr, this, Bar.getCPtr(key), key), true);
  }

  private BarMap.Iterator begin() {
    return new BarMap.Iterator(FooModuleJNI.BarMap_begin(swigCPtr, this), true);
  }

  private BarMap.Iterator end() {
    return new BarMap.Iterator(FooModuleJNI.BarMap_end(swigCPtr, this), true);
  }

  private int sizeImpl() {
    return FooModuleJNI.BarMap_sizeImpl(swigCPtr, this);
  }

  private boolean containsImpl(Bar key) {
    return FooModuleJNI.BarMap_containsImpl(swigCPtr, this, Bar.getCPtr(key), key);
  }

  private void putUnchecked(Bar key, Bar value) {
    FooModuleJNI.BarMap_putUnchecked(swigCPtr, this, Bar.getCPtr(key), key, Bar.getCPtr(value), value);
  }

  private void removeUnchecked(BarMap.Iterator itr) {
    FooModuleJNI.BarMap_removeUnchecked(swigCPtr, this, BarMap.Iterator.getCPtr(itr), itr);
  }

}
